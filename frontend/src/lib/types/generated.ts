/*
 Generated by typeshare 1.13.2
*/

export interface ApiError {
	id: number;
	timestamp: string;
	level: string;
	content: string;
}

export enum ApiStatisticType {
	Total = "total",
	Tag = "tag",
	Suite = "suite",
}

export interface ApiStatistic {
	id: number;
	statType: ApiStatisticType;
	passCount: number;
	failCount: number;
	skipCount: number;
	identifier?: string;
	name?: string;
	text: string;
}

export interface ApiTest {
	id: number;
	name: string;
	line: number;
	identifier: string;
	tags: string[];
	status: string;
	startTime: string;
	endTime: string;
	doc?: string;
	timeout?: string;
}

export interface ApiSuite {
	id: number;
	name: string;
	source?: string;
	status: string;
	startTime: string;
	endTime: string;
	doc?: string;
	identifier: string;
	suites: ApiSuite[];
	tests: ApiTest[];
}

export interface ApiSuiteKeywords {
	setupKeyword?: Value;
	teardownKeyword?: Value;
}

export interface ApiTestRunSummary {
	testRunId: number;
	testRunDate: string;
	elapsedTime: string;
	totalTests: number;
	passedTests: number;
	failedTests: number;
	skippedTests: number;
	errorCount: number;
	appVersion: string;
}

export interface ProjectOverviewResponse {
	id: number;
	name: string;
	createDate: string;
	testRunCount: number;
	lastTestRunSummary?: ApiTestRunSummary;
}

export interface ProjectResponse {
	id: number;
	name: string;
	createDate: string;
	testRunCount: number;
	testRunsSummaries: ApiTestRunSummary[];
}

export interface TestRunResponse {
	id: number;
	projectId: number;
	rpa: boolean;
	generator: string;
	generatedDate: string;
	schemaVersion: string;
	importedDate: string;
	suites: ApiSuite[];
	statistics: ApiStatistic[];
	errors: ApiError[];
	appVersion: string;
}

